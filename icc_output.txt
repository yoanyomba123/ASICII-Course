Initializing gui preferences from file  /home/dm3233@drexel.edu/.synopsys_icc_prefs.tcl
icc_shell> man place_opt
2.  Synopsys Commands                                        Command Reference
                                   place_opt

NAME
       place_opt
              Performs  simultaneous  placement,  routing, and optimization on
              the design.

SYNTAX
       status place_opt
               [-effort low | medium | high]
               [-area_recovery]
               [-optimize_dft]
               [-congestion]
               [-power]
               [-cts]
               [-spg]
               [-skip_initial_placement]
               [-consider_scan]
               [-continue_on_missing_scandef]
               [-optimize_icgs]

ARGUMENTS
       -effort low | medium | high
              Specifies the effort level for place_opt.

              The default effort level is medium.

              If you specify high, the place_opt command spends more  time  to
              further improve the quality of results (QoR).

              If  you  specify  low, the place_opt command spends less time on
              improving the QoR.

       -area_recovery
              Enables area recovery for the cells not on the  timing  critical
              paths.

              By default, area recovery is not performed.

       -optimize_dft
              Enables  scan  chain  reordering, which performs placement-aware
              scan reordering. It aims to reduce the scan chain  wire  length,
              minimize congestion, and improve routability.

              When  you  specify  this  option, you must load the SCANDEF data
              that defines the scan chains before running the  place_opt  com-
              mand.   You  can use the get_scan_chains command to check if the
              SCANDEF data is available.

       -congestion
              Enables congestion removal algorithms for improved  routability.

              By default, congestion removal is not performed.

       -power
              Enables  power-aware timing optimization and leakage-power opti-
              mization during the place_opt command.

              The place_opt command  can  perform  leakage-power  optimization
              based on either the multiple-threshold-voltage constraint or the
              leakage values of the library cells.  To  perform  leakage-power
              optimization based on the multiple-threshold-voltage constraint,
              use the set_multi_vth_constraint command  to  define  this  con-
              straint  before  running  the  place_opt  command.  If this con-
              straint is not defined, the tool bases the  leakage-power  opti-
              mization on the leakage values of the library cells.

              When you specify this option for a multicorner-multimode design,
              you must use the  set_scenario_options  command  to  select  the
              leakage scenarios before running the place_opt command.

              By default, neither power-aware timing optimization nor leakage-
              power optimization is performed. To perform  power-aware  timing
              optimization without leakage-power optimization, do not use this
              option, but set the icc_preroute_power_aware_optimization  vari-
              able to true.

       -cts
              Enables  clock  tree synthesis, optimization, and routing within
              the place_opt command. It also enables the  optimization  engine
              to work with propagated clock network delays.

              When you specify this option, you must specify all clock-related
              constraints before running the place_opt command.

       -spg
              Enables the use of Synopsys physical guidance  information  from
              the  Design  Compiler  tool. The compile_ultra command in Design
              Compiler needs to run  with  the  same  option.  With  the  -spg
              option,  the  place_opt  uses  the physical guidance information
              from Design Compiler to guide optimization.

              This option cannot  be  used  with  the  -skip_initial_placement
              option.

       -skip_initial_placement
              Skips  the  initial placement stage that is invoked first during
              the place_opt flow.

              When you specify this option, you must ensure that  the  initial
              placement  has  been  performed;  that  is, all cells have valid
              locations and macro cells are fixed.  Otherwise,  the  place_opt
              command exits with an error.

              You  also  need  to  ensure  that high fanout synthesis has been
              done. With this option, only incremental high  fanout  synthesis
              is performed during the place_opt flow.

              This option cannot be used with the -spg option.

       -consider_scan
              Considers  the  scan  chain  connections  during placement.  You
              should not specify this option when performing the DFT optimiza-
              tion flow because scan nets affect placement.

              By default, the command ignores scan nets and disables DFT opti-
              mization.

       -continue_on_missing_scandef
              Continues placement when the design contains scan chains but  no
              SCANDEF data.

              By default, missing SCANDEF data causes the command to exit with
              an error message. If you specify this option, the  command  con-
              tinues with a warning and results in reduced QoR.

              Setting  this option enables the placer to continue and consider
              the scan chains regardless of the setting of the  -consider_scan
              option.

       -optimize_icgs

              Enables additional optimization for clock gates and clock enable
              paths during place_opt command.

              You  should  consider  using   this  option  when  clock  gating
              enable paths are critical bottle necks for timing closer in your
              design.

              Prior to using place_opt with -optimize_icgs  option,  you  must
              load  all the clock tree synthesis options and settings, includ-
              ing the clock tree synthesis scenarios, to ensure  correct  syn-
              thesis of the clocks in the design.  When  this option is speci-
              fied, the place_opt command performs restructuring of the  clock
              gating  logic and the clock gating latencies are considered dur-
              ing the place_opt flow.  Estimated clock gating skew margin val-
              ues  are  applied  to  clock  enable  paths,  viewable in timing
              reports.

DESCRIPTION
       This command performs simultaneous placement, routing, and optimization
       on  the  current design. The output of this command is a legally placed
       netlist. If you specify the -cts option, the  output  also  includes  a
       fully synthesized, optimized, routed, and extracted clock network.

   Multicorner-Multimode Support
       This command uses information from all active scenarios.  If you enable
       power optimization, you must select the leakage scenarios  before  run-
       ning the place_opt command.

EXAMPLES
       The following example runs the place_opt command in timing-driven mode.

         prompt> place_opt

SEE ALSO
       clock_opt(2)
       create_buffer_tree(2)
       create_placement(2)
       extract_rc(2)
       identify_clock_gating(2)
       legalize_placement(2)
       psynopt(2)
       route_opt(2)
       set_place_opt_cts_strategy(2)
       create_net_search_pattern(2)
       set_net_search_pattern_delay_estimation_options(2)
       set_multi_vth_constraint(2)
       set_scenario_options(2)
       icc_preroute_power_aware_optimization(3)
       set_place_opt_strategy(2)
       report_place_opt_strategy(2)

                         Version L-2016.03-SP5-1
            Copyright (c) 2016 Synopsys, Inc. All rights reserved.
icc_shell> 
icc_shell> man route_opt
2.  Synopsys Commands                                        Command Reference
                                   route_opt

NAME
       route_opt
              Performs  simultaneous routing and postroute optimization on the
              design.

SYNTAX
       status route_opt
               [-stage global | track | detail]
               [-xtalk_reduction]
               [-only_xtalk_reduction]
               [-power]
               [-size_only]
               [-area_recovery]
               [-wire_size]
               [-effort low | medium | high]
               [-initial_route_only
                | -skip_initial_route
                | -incremental]
               [-only_wire_size]
               [-only_hold_time]
               [-only_design_rule]
               [-only_power_recovery]
               [-only_area_recovery]
               [-register_to_register]
               [-concurrent_clock_and_data]
               [-only_concurrent_clock_and_data]
               [-optimize_wire_via]
               [-num_cpus count]

   Data Types
       count     integer

ARGUMENTS
       -stage global | track | detail
              Specifies the routing stages to  run  before  running  topology-
              based optimization.

              If you do not specify this option, the tool runs global routing,
              track assignment, and detail routing  before  running  optimiza-
              tion.

              If  you specify -stage global, the tool runs only global routing
              before running optimization.

              If you specify -stage track, the tool runs  global  routing  and
              track assignment before running optimization.

              IF  you specify -stage detail, the tool runs only detail routing
              before running optimization. The  design  must  already  contain
              global route and track assignment information.

              If  you  specify -stage global or -stage track when block inter-
              face optimization is enabled, the tool issues a warning  message
              and ignores block interface optimization. To use block interface
              optimization,  either  remove  this  option  or  specify  -stage
              detail.

       -xtalk_reduction
              Runs  routing-based  crosstalk  reduction  signal integrity (SI)
              optimization.

              This option is applicable only if you  enable  signal  integrity
              mode  before  running  the  route_opt command. You enable signal
              integrity mode by setting the -route_xtalk_prevention option  of
              the  set_si_options  command to true. By default, this option is
              set to false. If you specify the -xtalk_reduction option without
              enabling signal integrity mode, the tool issues an error message
              and stops. If you specify this  option  and  also  enable  block
              interface optimization, the tool honors the option only for top-
              level nets.

       -only_xtalk_reduction
              Runs only routing-based crosstalk reduction.

              Similar to the -xtalk_reduction option, this option is  applica-
              ble  only  if  you  enable  signal  integrity  mode  running the
              route_opt command. If you specify this option  without  enabling
              signal  integrity  mode or if you specify any other options with
              the -only_xtalk_reduction option, the tool issues an error  mes-
              sage and stops. If you specify this option and also enable block
              interface optimization, the tool will honor the option only  for
              top-level nets.

       -power
              Enables topology-based leakage-power optimization.

              The  route_opt  command  can  perform leakage-power optimization
              based on either the multiple-threshold-voltage constraint or the
              leakage  values  of  the library cells. To perform leakage-power
              optimization based on the multiple-threshold-voltage constraint,
              use  the  set_multi_vth_constraint  command  to define this con-
              straint before running the  route_opt  command.   If  this  con-
              straint  is  not defined, the tool bases the leakage-power opti-
              mization on the leakage values of the library cells.

              When you specify this option for a multicorner-multimode design,
              you  must  use  the  set_scenario_options  command to select the
              leakage scenarios before running the route_opt command.

       -size_only
              Performs only sizing of cells  in  topology-based  optimization.
              You  can  use this option for designs that are very sensitive to
              postroute optimization changes.

              You control  the  sizing  method  by  setting  the  effort.   By
              default, the tool runs medium effort optimization, which enables
              in-place size-only optimization. To use footprint swapping,  set
              the  -effort option to low. To use regular density-based sizing,
              set the -effort option to high.

       -area_recovery
              Enables area recovery for cells that are not on timing  critical
              paths.

       -wire_size
              Enables  the use of an additional technique that sizes the width
              of route segments to fix setup time violations during  topology-
              based optimization.

              This  option  needs existing nondefault routing rules and it can
              change netlist.  The tool applies nondefault  routing  rules  to
              the  touched  nets  and the applied nondefault routing rules are
              not removed after wire sizing.

              If you specify this option and also enable block interface opti-
              mization, the tool honors the option only for top-level nets.

       -effort low | medium | high
              Specifies  the  effort  level for postroute optimizations in the
              route_opt flow. This option does not change  the  routing  steps
              performed by the route_opt command.

              Valid  values  are  low,  medium, and high.  In high effort, the
              tool is more aggressive during optimization and runs three opti-
              mization loops.

              The default effort level is medium.

       -initial_route_only
              Runs  only  the initial routing stage and does not perform opti-
              mization.

              This option cannot  be  used  with  the  -skip_initial_route  or
              -incremental options.

       -skip_initial_route
              Runs  the only topology-based optimization and ECO routing with-
              out running initial routing.

              Note that if signal integrity mode is enabled, this option  runs
              ECO  routing  without  signal  integrity followed by ECO routing
              with  signal  integrity.  This  differs  from  the  -incremental
              option,  which  runs only ECO routing with signal integrity when
              signal integrity mode is enabled.

              Using this option on a design that is not  detail  routed  might
              generate  erroneous  results;  therefore, you should verify that
              the design is fully routed before you use this option.

              This option cannot be used with the -initial_route_only, -incre-
              mental, or -stage options.

       -incremental
              Disables  running  of  the initial routing steps.  The tool runs
              only topology-based incremental optimization and ECO routing.

              Note that if signal integrity mode is enabled, this option  runs
              only  ECO routing with signal integrity and does not run the ECO
              routing  step  without  signal  integrity,  as  the   -skip_ini-
              tial_route option does.

              This   option  cannot  be  used  with  the  -initial_route_only,
              -skip_initial_route, or -stage options.

       -only_wire_size
              Performs only sizing of wires  during  topology-based  optimiza-
              tion.   The tool applies nondefault routing rules to the touched
              nets and the applied nondefault routing rules  are  not  removed
              after  wire  sizing.  If you specify this option and also enable
              block interface optimization, the tool honors  the  option  only
              for top-level nets.

       -only_hold_time
              Specifies that only hold time violations are fixed.

              This option is applicable only if you enabled hold fixing before
              running the route_opt command. You enable hold fixing  by  using
              the set_fix_hold command.

              This option can be used only with the -incremental option.

       -only_design_rule
              Specifies that only design rule fixing is performed.

              This option can be used only with the -incremental option.

       -only_power_recovery
              Specifies that only leakage power optimizations are performed.

              This option can be used only with the -incremental option.

       -only_area_recovery
              Specifies that only area optimizations are performed.

              This option can be used only with the -incremental option.

       -register_to_register
              Specifies  that  only  register-to-register optimization is per-
              formed.

              This option must be used with the -incremental option. The  only
              other  options  that  you  can  specify  with  this  option  are
              -size_only, -only_hold_time, or -only_design_rule.

       -concurrent_clock_and_data
              Optimizes the clock paths along with the data  paths.  The  data
              paths are optimized to fix setup and hold violations, as well as
              logical design rule violations.

              By default, the route_opt command optimizes only data paths.

              When you use this option, you must set  the  options  for  clock
              path      optimization      by     using     the     set_concur-
              rent_clock_and_data_strategy command.

       -only_concurrent_clock_and_data
              Optimizes the clock paths after performing  a  lightweight  data
              path optimization that fixes only setup violations.

              When  you  use  this  option, you must set the options for clock
              path     optimization     by     using      the      set_concur-
              rent_clock_and_data_strategy command.

       -optimize_wire_via
              Runs an extra wire length and via count optimization.

              This  option  is supported only by the classic router and cannot
              be used with Zroute.

              If you specify this option and also enable block interface opti-
              mization, the tool honors the option only for top-level nets.

       -num_cpus count
              Specifies  the  number of CPUs for detail routing and search and
              repair routing.  You can use up to 63 CPUs.

              By default, a single CPU is used.

              This option is applicable only if  you  are  using  the  classic
              router  and  you  set up multiple CPU mode by using the set_dis-
              tributed_route command prior to running the route_opt command.

              This option is supported only by the classic router  and  cannot
              be used with Zroute.

DESCRIPTION
       This  command  performs simultaneous routing and postroute optimization
       on the current design. The output of this command is a postroute  opti-
       mized  design. The route_opt flow runs differently depending on whether
       signal integrity mode is enabled.

       A  default  (medium  effort)  signal-integrity-enabled  route_opt  flow
       includes:

       1.  Initial routing: Global routing, track assignment, and detail rout-
         ing
         If you are using the classic router, it also runs search and  repair.

       2.  Topology-based  optimization  (adaptive) without considering signal
         integrity

       3. Topology-based signal integrity optimization

       A default  (medium  effort)  signal-integrity-disabled  route_opt  flow
       includes:

       1.  Initial routing: Global routing, track assignment, and detail rout-
         ing
         If you are using the classic router, it also runs search and  repair.

       2. Topology-based optimization without considering signal integrity

       You  can  add  routing-based crosstalk reduction to the default flow by
       using the -xtalk_reduction option. If you are using the classic router,
       you  can add wire length and via count optimization to the default flow
       by using the -optimize_wire_via  option.  The  signal-integrity-enabled
       route_opt flow is then changed to:

       1.  Initial routing: Global routing, track assignment, and detail rout-
         ing
         If you are using the classic router, it also runs search and  repair.

       2. Optimization of wire length and via count

       3.  Topology-based  optimization  (adaptive) without considering signal
         integrity

       4. Routing-based crosstalk reduction

       5. Topology-based signal integrity optimization

       To enable verbose reporting during the hold  fixing,  DRC  fixing,  and
       crosstalk  reduction  stages,  set  the routeopt_verbose variable. This
       variable uses bitwise operation to enable various  reporting  capabili-
       ties. For details about setting this variable, see the man page.

   Multicorner-Multimode Support
       This command uses information from all active scenarios.  If you enable
       power optimization, you must select the leakage scenarios  before  run-
       ning the place_opt command.

   Block Interface Optimization Support
       The  route_opt  command  uses  information from the set_top_implementa-
       tion_options command and performs topology-based  optimization  at  the
       top level and block interface.  At the end of route_opt, the blocks are
       updated in memory with the changes. You must run the  save_mw_cel  com-
       mand to save the updated design to disk.

       The  following  options  do  not apply to block interface optimization:
       -xtalk_reduction, -only_xtalk_reduction, -stage global,  -stage  track,
       -optimize_wire_via, -wire_size, and -only_wire_size.

       If  you use these options when block interface optimization is enabled,
       the tool honors these options only for top-level nets.

EXAMPLES
       The following example runs initial routing and  stops  without  running
       optimization:

         prompt> route_opt -initial_route_only

       The following example performs only global routing:

         prompt> route_opt -initial_route_only -stage global

       The  following  example  performs only global routing and track assign-
       ment:

         prompt> route_opt -initial_route_only -stage track

       The following example runs only detail routing (if you  are  using  the
       classic router, it also runs search and repair):

         prompt> route_opt -initial_route_only -stage detail

       The  following  example  runs  only  optimization and skips the initial
       routing steps:

         prompt> route_opt -skip_initial_route

       The following example runs only incremental optimization:

         prompt> route_opt -incremental

       The following example runs routing-based crosstalk reduction  in  addi-
       tion to the default route_opt signal integrity flow:

         prompt> route_opt -xtalk_reduction

       The  following  example enables block interface optimization, runs only
       optimization and skips the initial routing steps:

         prompt> set_host_options -pool LSF -name "LSF_hosts"
         prompt> set_top_implementation_options \
            -optimize_block_interface true -host_options "LSF_hosts"
         prompt> route_opt -skip_initial_route

       The following example enables block interface  optimization,  and  runs
       only incremental optimization:

         prompt> set_host_options -pool LSF -name "LSF_hosts"
         prompt> set_top_implementation_options \
            -optimize_block_interface true -host_options "LSF_hosts"
         prompt> route_opt -incremental

SEE ALSO
       clock_opt(2)
       extract_rc(2)
       place_opt(2)
       set_route_opt_strategy(2)
       set_top_implementation_options(2)
       set_multi_vth_constraint(2)
       set_scenario_options(2)
       routeopt_verbose(3)

                         Version L-2016.03-SP5-1
            Copyright (c) 2016 Synopsys, Inc. All rights reserved.
icc_shell> 
icc_shell> 
icc_shell> 
icc_shell> 
icc_shell> 
icc_shell> 
icc_shell> exi
Error: unknown command 'exi' (CMD-005)
icc_shell> exit

Thank you...

